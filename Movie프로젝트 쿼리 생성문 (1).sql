SHOW DATABASES;

USE Movie_Project;

SHOW TABLES;
-- user 테이블 생성
CREATE TABLE USER (
    UIDX VARCHAR(12) PRIMARY KEY NOT NULL, -- 유저ID, 형식: UYYYYMMDDXXX
    UNAME VARCHAR(15) NOT NULL, -- 이름
    UID VARCHAR(20) NOT NULL, -- 아이디
    UPW VARCHAR(60) NOT NULL, -- 비밀번호 (해시값)
    UBIRTH VARCHAR(7) NOT NULL, -- 생년월일 (6자리 + 주민번호 뒷자리 1자리)
    UGENDER CHAR(1), -- 성별 (M 또는 F)
    UPHONE VARCHAR(11) NOT NULL, -- 전화번호 (010-****-**** 형식)
    UADDR1 VARCHAR(100) NOT NULL, -- 주소1 (카카오맵 API)
    UADDR2 VARCHAR(50) NOT NULL, -- 주소2 (상세주소)
    UMAIL VARCHAR(50) NOT NULL, -- 이메일 (형식: **@*.*)
    USTATUS CHAR(1) NOT NULL DEFAULT 'N', -- 유저 상태 (Y: 탈퇴, N: 정상, B: 정지)
    UPOST VARCHAR(5) NOT NULL, -- 우편번호 (카카오맵 API)
    UINSERTDATE DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP, -- 가입일
    UUPDATEDATE DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, -- 수정일
    UDELETEDATE DATETIME , -- 탈퇴일
    UPROFILE VARCHAR(80), -- 프로필업로드명
    USAVEPROFILE VARCHAR(80) -- 프로필저장명
);

-- review 테이블 생성
CREATE TABLE REVIEW (
    RIDX VARCHAR(12) PRIMARY KEY NOT NULL, -- 리뷰글번호, 형식: RYYYYMMDDXXX
    UIDX VARCHAR(12) NOT NULL, -- 유저ID, 회원테이블의 UIDX와 동일
    MID VARCHAR(10) NOT NULL, -- 영화ID, TMDB API에서 제공
    RTITLE VARCHAR(50) NOT NULL, -- 글 제목
    RCONTENT TEXT NOT NULL, -- 글 내용
    RINSERTDATE DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP, -- 작성일, 현재 시간 자동 입력
    RUPDATEDATE DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, -- 최근 수정일, 현재 시간 자동 입력
    RGOOD INT NOT NULL DEFAULT 0, -- 공감 수, 기본값 0
    RREPORT INT NOT NULL DEFAULT 0, -- 신고 수, 기본값 0
    RVIEW INT NOT NULL DEFAULT 0, -- 조회수, 기본값 0
    FOREIGN KEY (UIDX) REFERENCES USER(UIDX) -- 유저ID는 USER 테이블의 UIDX 외래키
);
-- comment 테이블 생성
CREATE TABLE COMMENT (
    CIDX VARCHAR(12) PRIMARY KEY NOT NULL, -- 댓글ID, 형식: CYYYYMMDDXXX
    UIDX VARCHAR(12) NOT NULL, -- 회원ID, USER 테이블의 외래키
    RIDX VARCHAR(12) NOT NULL, -- 리뷰글번호, REVIEW 테이블의 외래키
    MID VARCHAR(10) NOT NULL, -- 영화ID, TMDB API에서 제공
    CCOMMENT VARCHAR(255) NOT NULL, -- 댓글 내용
    CREPORT INT NOT NULL DEFAULT 0, -- 신고 수, 기본값 0
    CDELETEYN CHAR(1) DEFAULT 'N', -- 삭제 여부 (N: 기본값, Y: 삭제됨, B: 블라인드처리)
    CINSERTDATE DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP, -- 작성일, 현재 시간 자동 입력
    CUPDATEDATE DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, -- 최근 수정일, 현재 시간 자동 입력
    FOREIGN KEY (UIDX) REFERENCES USER(UIDX), -- 회원ID는 USER 테이블의 UIDX 외래키
    FOREIGN KEY (RIDX) REFERENCES REVIEW(RIDX) -- 리뷰글번호는 REVIEW 테이블의 RIDX 외래키
);

-- blocked 테이블 생성
CREATE TABLE BLOCKED (
    BIDX VARCHAR(12) NOT NULL, -- 차단번호, 접두어:B + 날짜 + 채번 (B20240705001 형식)
    UIDX VARCHAR(12) NOT NULL, -- 차단유저, USER 테이블의 UIDX와 동일
    TARGET_UIDX VARCHAR(12) NOT NULL, -- 대상유저, USER 테이블의 UIDX와 동일
    BREASON VARCHAR(30), -- 차단사유
    BBLOCKEDDATE DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP, -- 차단날짜 (현재 날짜 저장)
    PRIMARY KEY (BIDX), -- 차단번호를 기본 키로 설정
    FOREIGN KEY (UIDX) REFERENCES USER(UIDX) ON DELETE CASCADE, -- 차단유저에 대한 외래키
    FOREIGN KEY (TARGET_UIDX) REFERENCES USER(UIDX) ON DELETE CASCADE -- 대상유저에 대한 외래키
);
-- reaction 테이블 생성
CREATE TABLE REACTION (
    UIDX VARCHAR(12) NOT NULL,  -- 유저ID
    RIDX_CIDX VARCHAR(12) NOT NULL,  -- 글/댓글 ID
    RTYPE ENUM('추천', '신고') NOT NULL,  -- 타입
    PRIMARY KEY (UIDX, RIDX_CIDX)  -- 유니크한 조합
);


-- user 테이블에 임의 데이터 삽입
INSERT INTO USER (UIDX, UNAME, UID, UPW, UBIRTH, UGENDER, UPHONE, UADDR1, UADDR2, UMAIL, USTATUS, UPOST, UINSERTDATE, UUPDATEDATE, UDELETEDATE, UPROFILE, USAVEPROFILE) 
VALUES
('U20230101001', '홍길동', 'hong1234', 'hashedpassword123', '9201011', 'M', '01012345678', '서울시 강남구', '역삼동 123-45', 'hong@example.com', 'N', '06123', '2025-01-07 14:15:34', '2025-01-07 14:15:34', '9999-12-31 00:00:00', 'profile_image.jpg', 'profile_image_saved.jpg'),
('U20230202002', '김유진', 'kim5678', 'hashedpassword456', '9505051', 'F', '01098765432', '서울시 서초구', '반포동 67-89', 'kim@example.com', 'N', '06789', '2025-01-07 14:15:34', '2025-01-07 14:15:34', '9999-12-31 00:00:00', 'profile2_image.jpg', 'profile2_image_saved.jpg');

-- REVIEW 테이블에 임의 데이터 삽입
INSERT INTO REVIEW (
    RIDX, UIDX, MID, RTITLE, RCONTENT, RGOOD, RREPORT, RVIEW
) VALUES
('R20230101001', 'U20230101001', 'M001', '재밌는 영화', '이 영화는 정말 흥미롭고 스릴 넘쳤다!', 10, 0, 100),
('R20230202001', 'U20230202002', 'M002', '최고의 액션 영화', '액션 씬이 환상적이었다. 강력 추천한다.', 15, 1, 150);

-- COMMENT 테이블에 임의 데이터 삽입
INSERT INTO COMMENT (
    CIDX, UIDX, RIDX, MID, CCOMMENT, CREPORT, CDELETEYN
) VALUES
('C20230101001', 'U20230202002', 'R20230101001', 'M001', '정말 재밌었어요!', 0, 'N'),
('C20230202001', 'U20230101001', 'R20230202001', 'M002', '완전 멋진 영화였습니다!', 0, 'N');

-- REACTION 테이블에 임의 데이터 삽입
INSERT INTO REACTION (
    UIDX, RIDX_CIDX, RTYPE
) VALUES
('U20230101001', 'R20230101001', '추천'),
('U20230202002', 'C20230101001', '신고');

-- BLOCKED 테이블에 임의 데이터 삽입
INSERT INTO BLOCKED (
    BIDX, UIDX, TARGET_UIDX, BREASON
) VALUES
('B20240705001', 'U20230101001', 'U20230202002', '불쾌한 댓글'),
('B20240705002', 'U20230202002', 'U20230101001', '스팸 메시지');

desc user;

SELECT * FROM user;
SELECT * FROM reaction;
SELECT * FROM comment;
SELECT * FROM blocked;
SELECT * FROM review;


use Movie_Project;
show tables;



drop table user;
drop table reaction;
drop table review;
drop table blocked;
drop table comment;

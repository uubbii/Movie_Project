/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.93
 * Generated at: 2025-01-08 07:21:29 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class home_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("jar:file:/C:/Users/lookt/OneDrive/Desktop/javaPro/66.Project/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/Movie_Project/WEB-INF/lib/jstl-1.2.jar!/META-INF/c-1_0-rt.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1723602930448L));
    _jspx_dependants.put("jar:file:/C:/Users/lookt/OneDrive/Desktop/javaPro/66.Project/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/Movie_Project/WEB-INF/lib/jstl-1.2.jar!/META-INF/fmt-1_0-rt.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"EUC-KR\">\n");
      out.write("<title>main</title>\n");
      out.write("<style>\n");
      out.write("   body{\n");
      out.write("   height:100%;\n");
      out.write("   margin:0;\n");
      out.write("   padding:0;\n");
      out.write("   }\n");
      out.write("   header{\n");
      out.write("      background-color: #fff;\n");
      out.write("      box-shadow: 0 1px #00000014;\n");
      out.write("      display: block;\n");
      out.write("      text-align: center;\n");
      out.write("      height: 62px;\n");
      out.write("      width: 100%;\n");
      out.write("      left: 0;\n");
      out.write("   }\n");
      out.write("   nav{\n");
      out.write("      width: 100%;\n");
      out.write("      margin-left: auto;\n");
      out.write("      margin-right: auto;\n");
      out.write("      display: block;\n");
      out.write("   }\n");
      out.write("   section{\n");
      out.write("      max-width: 1320px;\n");
      out.write("      margin-left:100px;\n");
      out.write("      margin-right:110px;\n");
      out.write("      display: block;\n");
      out.write("   }\n");
      out.write("   ul{\n");
      out.write("      list-style: none;\n");
      out.write("      display: flex;\n");
      out.write("      align-items: center;\n");
      out.write("      margin:0;\n");
      out.write("      padding:0;\n");
      out.write("      margin-top:0;\n");
      out.write("      margin-bottom:0;\n");
      out.write("      margin-left:0;\n");
      out.write("      margin-right:0;\n");
      out.write("   }\n");
      out.write("   li{\n");
      out.write("      position: relative;\n");
      out.write("         height: 62px;\n");
      out.write("         unicode-bidi: isolate;\n");
      out.write("         margin: 0 0 0 10px;\n");
      out.write("       display: flex;           /* 추가 */\n");
      out.write("       align-items: center;     \n");
      out.write("   }\n");
      out.write("   .search{\n");
      out.write("      margin: 0 0 0 auto;\n");
      out.write("   }\n");
      out.write("   a{\n");
      out.write("      height: 40px;\n");
      out.write("       padding: 0 16px;\n");
      out.write("       display: flex;           /* 추가 */\n");
      out.write("       align-items: center;    \n");
      out.write("   }\n");
      out.write("   \n");
      out.write("   .modal{ position:fixed; top:0; bottom:0; left:0; right:0; z-index: 20; display:none;}\n");
      out.write("   .modal{}.pwChk{}\n");
      out.write("   .modal{} .bg{position:fixed; top:0; bottom:0; left:0; right:0; background:#71717142}\n");
      out.write("   .modal{} .box{position:absolute; z-index:21; background:#ffff; border-radius: 5px;\n");
      out.write("   top:0; bottom:0; left:0; right:0; margin:auto; width:fit-content; height:fit-content; padding:50px;}\n");
      out.write("   .modal{} .box h5{font-size:20px; text-align:center; margin-bottom:20px;}\n");
      out.write("   .modal{} .box p{text-align:center;}\n");
      out.write("   .modal{} .box input{display:block; margin: 20px 0;}\n");
      out.write("   .modal{} .box a{}\n");
      out.write("   .is-show{display:block !important;}\n");
      out.write("   \n");
      out.write("</style>\n");
      out.write("</head> \n");
      out.write("<body>\n");
      out.write("   <header class=\"\" style=\"position:fixed; top: 0px;\">\n");
      out.write("   <!-- 로그인 모달 -->\n");
      out.write("   <div class=\"modal login\">\n");
      out.write("      <div class=\"bg\"></div>\n");
      out.write("      <div class=\"box\">\n");
      out.write("         <p>아이디 입력하게</p>\n");
      out.write("         <input type=\"text\" class=\"\"/>\n");
      out.write("         <p>비밀번호 입력하게</p>\n");
      out.write("         <input type=\"password\"/>\n");
      out.write("         <button>로그인</button>\n");
      out.write("         <a  href=\"/userform\" ><button>회원가입 들어갈곳</button></a>\n");
      out.write("         \n");
      out.write("         <a href=\"/\">아이디를 잊으셨나요</a><a href=\"/\">비밀번호를 잊으셨나요?</a>\n");
      out.write("      </div>\n");
      out.write("   </div>\n");
      out.write("   <div class=\"modal ID\">\n");
      out.write("      <div class=\"bg\"></div>\n");
      out.write("      <div class=\"box\">\n");
      out.write("         <p>이메일을 입력하세요</p>\n");
      out.write("         <input type=\"text\"/>\n");
      out.write("         <p>전화번호를 입력하세요<p>\n");
      out.write("         <input type=\"text\"/>\n");
      out.write("         <button>확인</button>\n");
      out.write("      </div>\n");
      out.write("   </div>\n");
      out.write("   <div class=\"modal pw\">\n");
      out.write("      <div class=\"bg\"></div>\n");
      out.write("      <div class=\"box\">\n");
      out.write("         <p>이메일을 입력하세요</p>\n");
      out.write("         <input type=\"text\"/>\n");
      out.write("         <!-- 여기에 이제 컨트롤러에서 이메일 중복 확인, 확인이 되면 \n");
      out.write("         send-email로 이메일에 인증번호를 보낼 수 있도록 할 것임. -->\n");
      out.write("         <button>확인</button>\n");
      out.write("      </div>\n");
      out.write("   </div>\n");
      out.write("      <nav>\n");
      out.write("         <section>\n");
      out.write("            <ul>\n");
      out.write("               <li class=\"logo\">\n");
      out.write("                  <a href=\"\" type=\"button\"><span>왓챠피디아(로고)</span></a>\n");
      out.write("               </li>\n");
      out.write("               <li class=\"board\">\n");
      out.write("                  <a type=\"button\"><span>게시판</span></a>\n");
      out.write("               </li>\n");
      out.write("               <li class=\"search\">\n");
      out.write("                  <input type=\"text\" name=\"Search\" placeholder=\"영화감독,제목,배우를 검색해보세요\">\n");
      out.write("               </li>\n");
      out.write("               <li class=\"login\">\n");
      out.write("                  <button class=\"loginbtn\"><span>로그인</span></button>\n");
      out.write("               </li>\n");
      out.write("               <li class=\"profile\">\n");
      out.write("                  <a type=\"button\"><span>프로필사진</span></a>\n");
      out.write("               </li>\n");
      out.write("            </ul>\n");
      out.write("         </section>\n");
      out.write("      </nav>\n");
      out.write("   </header>\n");
      out.write("   <script>\n");
      out.write("   //로그인 modal is-show\n");
      out.write("   document.querySelector('.loginbtn').addEventListener('click', function () {\n");
      out.write("       document.querySelector('.modal.login').classList.add('is-show');\n");
      out.write("   });\n");
      out.write("   //로그인 modal 클릭하면 닫히도록\n");
      out.write("   document.querySelector('.modal .bg').addEventListener('click', function () {\n");
      out.write("       document.querySelector('.modal.login').classList.remove('is-show');\n");
      out.write("   });\n");
      out.write("   //로그인 modal 안에서 아이디찾기\n");
      out.write("   document.querySelector('.modal.login .box a:nth-of-type(2)').addEventListener('click', function (event) {\n");
      out.write("        event.preventDefault();\n");
      out.write("        document.querySelector('.modal.login').classList.remove('is-show');\n");
      out.write("        document.querySelector('.modal.ID').classList.add('is-show');\n");
      out.write("    });\n");
      out.write("   //로그인 modal 안에서 비밀번호 찾기\n");
      out.write("   document.querySelector('.modal.login .box a:nth-of-type(3)').addEventListener('click', function (event){\n");
      out.write("        event.preventDefault(); \n");
      out.write("        document.querySelector('.modal.login').classList.remove('is-show');\n");
      out.write("        document.querySelector('.modal.pw').classList.add('is-show');\n");
      out.write("    });\n");
      out.write("   //아이디찾기에서 다른곳 클릭하면 닫히는\n");
      out.write("   document.querySelector('.modal.ID .bg').addEventListener('click', function () {\n");
      out.write("       document.querySelector('.modal.ID').classList.remove('is-show');\n");
      out.write("   });\n");
      out.write("   //비밀번호찾기에서 다른곳을 클릭하면 닫히는\n");
      out.write("   document.querySelector('.modal.pw .bg').addEventListener('click', function () {\n");
      out.write("       document.querySelector('.modal.pw').classList.remove('is-show');\n");
      out.write("   });\n");
      out.write("   </script>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}

/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.93
 * Generated at: 2025-02-13 08:49:44 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class review_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("jar:file:/C:/Users/SAMSUNG/JavaPro/66.Project/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/Movie_Project/WEB-INF/lib/jstl-1.2.jar!/META-INF/c-1_0-rt.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1723603073652L));
    _jspx_dependants.put("jar:file:/C:/Users/SAMSUNG/JavaPro/66.Project/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/Movie_Project/WEB-INF/lib/jstl-1.2.jar!/META-INF/fmt-1_0-rt.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.release();
    _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.release();
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"EUC-KR\">\n");
      out.write("<title>Insert title here</title>\n");
      out.write("\n");
      out.write("<link rel=\"stylesheet\" href=\"/resources/CSS/review.css\" type=\"text/css\">\n");
      out.write("<link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200\">\n");
      out.write("<script>var contextPath = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("';</script>\n");
      out.write("<style>\n");
      out.write("\n");
      out.write("section {\n");
      out.write("	max-width: 1320px;\n");
      out.write("	margin-left: 110px;\n");
      out.write("	margin-right: 110px;\n");
      out.write("	display: block;\n");
      out.write("}\n");
      out.write("\n");
      out.write("ul {\n");
      out.write("	list-style: none;\n");
      out.write("	display: flex;\n");
      out.write("	align-items: center;\n");
      out.write("	gap:10px;\n");
      out.write("	margin: 0;\n");
      out.write("	padding: 0;\n");
      out.write("	margin-top: 0;\n");
      out.write("	margin-bottom: 0;\n");
      out.write("	margin-left: 0;\n");
      out.write("	margin-right: 0;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".search {\n");
      out.write("	margin: 0 0 0 auto;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".top_a {\n");
      out.write("	height: 40px;\n");
      out.write("	padding-right: 16px;\n");
      out.write("	display: flex; \n");
      out.write("	align-items: center;\n");
      out.write("}\n");
      out.write("\n");
      out.write("\n");
      out.write(".modal-content {\n");
      out.write("    width: 400px;\n");
      out.write("    background: white;\n");
      out.write("    padding: 20px;\n");
      out.write("    border-radius: 10px;\n");
      out.write("    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n");
      out.write("    position: fixed;\n");
      out.write("    top: 50%;\n");
      out.write("    left: 50%;\n");
      out.write("    transform: translate(-50%, -50%);\n");
      out.write("    z-index: 1000;\n");
      out.write("    text-align: center;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".modal-content h2 {\n");
      out.write("    margin-bottom: 15px;\n");
      out.write("    font-size: 1.5em;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".close {\n");
      out.write("    position: absolute;\n");
      out.write("    top: 10px;\n");
      out.write("    right: 15px;\n");
      out.write("    font-size: 24px;\n");
      out.write("    cursor: pointer;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".modal-content p {\n");
      out.write("    margin-bottom: 10px;\n");
      out.write("    font-size: 1em;\n");
      out.write("}\n");
      out.write("\n");
      out.write("textarea {\n");
      out.write("    width: 100%;\n");
      out.write("    height: 80px;\n");
      out.write("    margin-top: 5px;\n");
      out.write("    padding: 8px;\n");
      out.write("    border: 1px solid #ccc;\n");
      out.write("    border-radius: 5px;\n");
      out.write("    resize: none;\n");
      out.write("}\n");
      out.write("\n");
      out.write("#blockButton{\n");
      out.write("    background: white;\n");
      out.write("    color: black;\n");
      out.write("    border: none;\n");
      out.write("    cursor: pointer;\n");
      out.write("    margin : 0 0 0 3px;\n");
      out.write("}\n");
      out.write("\n");
      out.write("</style>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("	<header>\n");
      out.write("		<!-- 로그인 모달 -->\n");
      out.write("		<div class=\"modal login\">\n");
      out.write("			<div class=\"bg\"></div>\n");
      out.write("			<div class=\"box\">\n");
      out.write("				<form action=\"/login\" method=\"POST\">\n");
      out.write("					<p>아이디</p>\n");
      out.write("					<input class=\"login_input\" type=\"text\" name=\"uid\" />\n");
      out.write("					<p>비밀번호</p>\n");
      out.write("					<input class=\"login_input\" type=\"password\" name=\"upw\" />\n");
      out.write("					<button class=\"menubtn\" type=\"submit\">로그인</button>\n");
      out.write("				</form>\n");
      out.write("				<a href=\"/userform\"><button class=\"menubtn\">회원가입</button></a> \n");
      out.write("				<a href=\"/\"><button class=\"menubtn\">아이디찾기</button></a>\n");
      out.write("				<a href=\"/\"><button class=\"menubtn\">비밀번호찾기</button></a>\n");
      out.write("			</div>\n");
      out.write("		</div>\n");
      out.write("		<div class=\"modal ID\">\n");
      out.write("         <div class=\"bg\"></div>\n");
      out.write("         <div class=\"box\">\n");
      out.write("            <form name=\"findid\" method=\"post\" action=\"/Find_Uid\" onsubmit=\"return handleFormSubmit(event);\">\n");
      out.write("            <p>이메일을 입력하세요</p>\n");
      out.write("            <input type=\"text\" id=\"umail\" name=\"umail\" />\n");
      out.write("            <p>전화번호를 입력하세요\n");
      out.write("            <p>\n");
      out.write("               <input type=\"text\" id=\"uphone\" name=\"uphone\"/>\n");
      out.write("               <button class=\"menubtn\">확인</button>\n");
      out.write("            </form>\n");
      out.write("         </div>\n");
      out.write("      </div>\n");
      out.write("      <div class=\"modal pw\">\n");
      out.write("         <div class=\"bg\"></div>\n");
      out.write("         <div class=\"box\">\n");
      out.write("            <form name=\"findpw\" method=\"post\" action=\"/Find_Upw\" onsubmit=\"return handleFormSubmit2(event);\">\n");
      out.write("            <p>이메일을 입력하세요</p>\n");
      out.write("            <input type=\"text\" id=\"umail\" name=\"umail\"/>\n");
      out.write("            <p>아이디를 입력하세요</p>\n");
      out.write("            <input type=\"text\" id=\"uid\" name=\"uid\"/>\n");
      out.write("            <!-- 여기에 이제 컨트롤러에서 이메일 중복 확인, 확인이 되면 \n");
      out.write("         send-email로 이메일에 인증번호를 보낼 수 있도록 할 것임. -->\n");
      out.write("            <button class=\"menubtn\">확인</button>\n");
      out.write("            </form>\n");
      out.write("         </div>\n");
      out.write("      </div>\n");
      out.write("		<nav id=\"header\">\n");
      out.write("			<section>\n");
      out.write("				<ul class=\"menu_bar\">\n");
      out.write("					<li class=\"logo\">\n");
      out.write("						<a href=\"/\" type=\"button\">\n");
      out.write("							<img id=\"logoimg\" class=\"logoimg\" src=\"resources/IMG/moviepedia_22.png\">\n");
      out.write("						</a>\n");
      out.write("					</li>\n");
      out.write("					<li class=\"board\"><a type=\"button\"><span></span></a></li>\n");
      out.write("					<li class=\"search\">\n");
      out.write("                   		<form action=\"/search?=\" method=\"get\">\n");
      out.write("                       		<input type=\"text\" name=\"word\" placeholder=\"영화감독, 제목, 배우를 검색해보세요\">\n");
      out.write("                   		</form>\n");
      out.write("               		</li>\n");
      out.write("					<li class=\"login\">\n");
      out.write("					    <button class=\"loginbtn\">\n");
      out.write("					        ");
      if (_jspx_meth_c_005fset_005f0(_jspx_page_context))
        return;
      out.write("\n");
      out.write("					        ");
      if (_jspx_meth_c_005fset_005f1(_jspx_page_context))
        return;
      out.write("\n");
      out.write("					        ");
      if (_jspx_meth_c_005fout_005f0(_jspx_page_context))
        return;
      out.write("\n");
      out.write("					    </button>\n");
      out.write("					</li>\n");
      out.write("					<li class=\"profile\">\n");
      out.write("					    ");
      if (_jspx_meth_c_005fif_005f0(_jspx_page_context))
        return;
      out.write("\n");
      out.write("					</li>\n");
      out.write("				</ul>\n");
      out.write("			</section>\n");
      out.write("		</nav>\n");
      out.write("	</header>\n");
      out.write("\n");
      out.write("	<div class=\"body_layout\">\n");
      out.write("		<div class=\"review_box\">\n");
      out.write("			<div class=\"review_container\">\n");
      out.write("				<div class=\"review_detail\">\n");
      out.write("					<div class=\"review_top\">\n");
      out.write("						<div class=\"review_mp\">\n");
      out.write("							<div class=\"review_mp_img\">\n");
      out.write("								<img src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${poster_path}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" alt=\"영화포스터\" class=\"review_poster\" />\n");
      out.write("							</div>\n");
      out.write("						</div>																		\n");
      out.write("						<div class=\"review_name\">\n");
      out.write("    						<div class=\"review_mn\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${mname}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</div>\n");
      out.write("    						<div class=\"review_title\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${rvo.rtitle}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</div>\n");
      out.write("    						<div class=\"review_user_info\">\n");
      out.write("        						<div class=\"review_up\">\n");
      out.write("            						<img src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${rvo.usaveprofile}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" alt=\"기본 프로필 사진\" class=\"img_img\"/>\n");
      out.write("        						</div>\n");
      out.write("        					<div class=\"review_un\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${rvo.uidx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</div>\n");
      out.write("        					<div class=\"review_date\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${rvo.rinsertdate}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</div>                    \n");
      out.write("							");
      if (_jspx_meth_c_005fif_005f1(_jspx_page_context))
        return;
      out.write("\n");
      out.write("    					</div>\n");
      out.write("					</div>\n");
      out.write("				</div>\n");
      out.write("					<div id=\"blockModal\" class=\"modal\">\n");
      out.write("		               <div class=\"bg\"></div>\n");
      out.write("			                <div class=\"box\">\n");
      out.write("			                       <h2>차단 사유를 입력해주세요</h2>\n");
      out.write("			                       <form id=\"blockForm\" action=\"/Block\" method=\"POST\" onsubmit=\"return validateForm()\">\n");
      out.write("			                           <div>\n");
      out.write("                                 <p>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${rvo.uidx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("님을 차단합니다.</p>\n");
      out.write("                					<label for=\"reason\">차단할 사유를 적어주세요</label>\n");
      out.write("                					<textarea id=\"reason\" name=\"reason\" required></textarea>\n");
      out.write("            					</div>\n");
      out.write("            					<input type=\"hidden\" name=\"ridx\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${rvo.ridx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\n");
      out.write("            					<input type=\"hidden\" name = mid value = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${mid }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\n");
      out.write("            					<button type=\"submit\"><span class=\"material-symbols-outlined\">person_off</span></button>\n");
      out.write("        					</form>\n");
      out.write("    					</div>\n");
      out.write("					</div>\n");
      out.write("				</div>\n");
      out.write("<script>\n");
      out.write("//모달 열기\n");
      out.write("function openModal() {\n");
      out.write("    document.getElementById(\"blockModal\").style.display = \"block\";\n");
      out.write("}\n");
      out.write("\n");
      out.write("// 모달 닫기\n");
      out.write("document.querySelector('#blockModal .bg').addEventListener('click', function() {\n");
      out.write("    document.getElementById(\"blockModal\").style.display = \"none\";\n");
      out.write("});\n");
      out.write("\n");
      out.write("// 폼 유효성 검사\n");
      out.write("function validateForm() {\n");
      out.write("    const reason = document.getElementById(\"reason\").value;\n");
      out.write("    if (reason.trim() === \"\") {\n");
      out.write("        alert(\"차단 사유를 입력해주세요.\");\n");
      out.write("        return false; \n");
      out.write("    }\n");
      out.write("    return true; \n");
      out.write("}\n");
      out.write("\n");
      out.write("</script>\n");
      out.write("				<div class=\"review_mid\">\n");
      out.write("					<div class=\"review_content\">\n");
      out.write("						<div class=\"review_uc\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${rvo.rcontent}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(" </div>\n");
      out.write("					</div>\n");
      out.write("				</div>\n");
      out.write("				<div class=\"review_bottom\">\n");
      out.write("					<div class=\"review_upre\">\n");
      out.write("						<span class=\"material-symbols-outlined thumb\">thumb_up</span>\n");
      out.write("                		<div>추천 ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${rvo.rgood }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</div>\n");
      out.write("                		<span class=\"material-symbols-outlined siren\">siren</span>\n");
      out.write("                		<div>신고 ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${rvo.rreport }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</div>\n");
      out.write("					</div>\n");
      out.write("				</div>\n");
      out.write("			</div>\n");
      out.write("	         <div class=\"review_comment\">\n");
      out.write("	            <div class=\"comment_container\">\n");
      out.write("	               <h3>코멘트</h3>\n");
      out.write("	               <ul class=\"comment_ul\">\n");
      out.write("	                  ");
      if (_jspx_meth_c_005fforEach_005f0(_jspx_page_context))
        return;
      out.write("\n");
      out.write("	                  </ul>\n");
      out.write("	            </div>\n");
      out.write("	         </div>\n");
      out.write("			\n");
      out.write("			<div class=\"comment_input_box\">\n");
      out.write("				<h3>코멘트 작성</h3>\n");
      out.write("				<div class=\"comment_input_container\">\n");
      out.write("					<div class=\"comment_input\">\n");
      out.write("						<form id=\"commentForm\" class=\"comment-form\" action=\"/commentwrite\" method=\"POST\">\n");
      out.write("							<textarea id=\"rcomment\" name=\"ccomment\" class=\"comment-textarea\" placeholder=\"comment를 입력해주세요\" onkeydown=\"resize(this)\" onkeyup=\"resize(this)\" required></textarea>\n");
      out.write("  							");
      out.write(" \n");
      out.write("    						<input type=\"hidden\" name=\"mid\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${mid}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" class=\"comment-hidden\">\n");
      out.write("\n");
      out.write("    						<input type=\"hidden\" name=\"ridx\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ridx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" class=\"comment-hidden\">\n");
      out.write("    \n");
      out.write("   					 		<input type=\"hidden\" name=\"uidx\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${uidx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" class=\"comment-hidden\">\n");
      out.write("							\n");
      out.write("							<div>\n");
      out.write("    							<button type=\"submit\" class=\"comment-submit-button\">댓글 작성</button>\n");
      out.write("    						</div>\n");
      out.write("						</form>\n");
      out.write("					</div>\n");
      out.write("					<!-- <button type=\"submit\" class=\"comment-submit-button\">댓글 작성</button> -->\n");
      out.write("				</div>\n");
      out.write("			</div>\n");
      out.write("		</div>\n");
      out.write("	</div>\n");
      out.write("<script>\n");
      out.write("function resize(obj) {\n");
      out.write("    obj.style.height = '1px';\n");
      out.write("    obj.style.height = (12 + obj.scrollHeight) + 'px';\n");
      out.write("}\n");
      out.write("</script>\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.6.0.min.js\"></script>\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<div class=\"footlayout\">\n");
      out.write("		<div class=\"foot_bar\">\n");
      out.write("			<!-- <span>여기는 </span> -->\n");
      out.write("			<img class=\"logoimg\" src=\"resources/IMG/moviepedia_22.png\">\n");
      out.write("			<!-- <span> 입니다.</span> -->\n");
      out.write("		</div>\n");
      out.write("		<div class=\"foot_main\">\n");
      out.write("			<ul class=\"foot_ulf\">\n");
      out.write("				<li class=\"foot_li\">서비스 이용약관</li>\n");
      out.write("				<li class=\"foot_li\">개인정보 처리방침</li>\n");
      out.write("				<li class=\"foot_lif\">회사 안내</li>\n");
      out.write("			</ul>\n");
      out.write("			<ul class=\"foot_ul\">\n");
      out.write("				<li class=\"foot_li\">고객센터</li>\n");
      out.write("				<li class=\"foot_lif\">moviepeia@jj.ac.kr, +82-1577-7177</li>\n");
      out.write("			</ul>\n");
      out.write("			<ul class=\"foot_ul\">\n");
      out.write("				<li class=\"foot_li\">광고 문의</li>\n");
      out.write("				<li class=\"foot_lif\">moviepeia@jj.ac.kr / 최신 광고 소개서</li>\n");
      out.write("			</ul>\n");
      out.write("			<ul class=\"foot_ul\">\n");
      out.write("				<li class=\"foot_li\">제휴 및 대외 협력</li>\n");
      out.write("				<li class=\"foot_lif\">https://moviepedia.team/contact</li>\n");
      out.write("			</ul>\n");
      out.write("			<ul class=\"foot_ul\">\n");
      out.write("				<li class=\"foot_li\">무비피디아</li>\n");
      out.write("				<li class=\"foot_li\">대표 구함</li>\n");
      out.write("				<li class=\"foot_lif\">전북특별자치도 전주시 완산구 천잠로 303</li>\n");
      out.write("			</ul>\n");
      out.write("			<div class=\"copyright\">\n");
      out.write("			<img class=\"foot_logo\" src=\"resources/IMG/moviepedia_33.png\">\n");
      out.write("			<span>© 2025 by MOVIEPEDIA, Inc. All rights reserved.</span>\n");
      out.write("			</div>\n");
      out.write("		</div>\n");
      out.write("	</div>\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<script>\n");
      out.write("function blockUser(ridx) {\n");
      out.write("    fetch(\"Block\", {\n");
      out.write("        method: \"POST\",\n");
      out.write("        headers: {\n");
      out.write("            \"Content-Type\": \"application/json\"\n");
      out.write("        },\n");
      out.write("        body: JSON.stringify({ ridx: ridx }),\n");
      out.write("        credentials: 'same-origin'  // 세션 쿠키를 포함해서 전송\n");
      out.write("    })\n");
      out.write("    .then(response => {\n");
      out.write("        if (response.ok) {\n");
      out.write("            return response.json();\n");
      out.write("        } else {\n");
      out.write("            return response.text().then(errorText => {\n");
      out.write("                console.error(\"Error response: \", errorText);\n");
      out.write("                alert(errorText || \"차단에 실패했습니다.\");\n");
      out.write("            });\n");
      out.write("        }\n");
      out.write("    })\n");
      out.write("    .then(data => {\n");
      out.write("        if (data && data.status === \"success\") {\n");
      out.write("            alert(\"사용자를 차단했습니다.\");\n");
      out.write("        } else if (data && data.NoLogin) {\n");
      out.write("            alert(data.NoLogin);\n");
      out.write("        }\n");
      out.write("    })\n");
      out.write("    .catch(error => {\n");
      out.write("        console.error(\"오류 발생!\", error);\n");
      out.write("        alert(\"알 수 없는 오류가 발생했습니다.\");\n");
      out.write("    });\n");
      out.write("}\n");
      out.write("\n");
      out.write("\n");
      out.write("</script>\n");
      out.write("\n");
      out.write("\n");
      out.write("<script>\n");
      out.write("//로그인 modal is-show\n");
      out.write("document.querySelector('.loginbtn').addEventListener(\n");
      out.write("		'click',\n");
      out.write("		function() {\n");
      out.write("			// 현재 버튼의 텍스트가 '로그아웃'인지 확인\n");
      out.write("			const isLogout = this.textContent.trim() === '로그아웃';\n");
      out.write("\n");
      out.write("			if (isLogout) {\n");
      out.write("				// 로그아웃 상태면 로그아웃 처리\n");
      out.write("				window.location.href = '/logout';\n");
      out.write("			} else {\n");
      out.write("				// 로그인 상태가 아니면 모달창 표시\n");
      out.write("				document.querySelector('.modal.login').classList\n");
      out.write("						.add('is-show');\n");
      out.write("			}\n");
      out.write("		});\n");
      out.write("\n");
      out.write("// 기존 모달 관련 이벤트 리스너들은 유지\n");
      out.write("document.querySelector('.modal .bg').addEventListener(\n");
      out.write("		'click',\n");
      out.write("		function() {\n");
      out.write("			document.querySelector('.modal.login').classList\n");
      out.write("					.remove('is-show');\n");
      out.write("		});\n");
      out.write("\n");
      out.write("document.querySelector('.modal.login .box a:nth-of-type(2)')\n");
      out.write("		.addEventListener(\n");
      out.write("				'click',\n");
      out.write("				function(event) {\n");
      out.write("					event.preventDefault();\n");
      out.write("					document.querySelector('.modal.login').classList\n");
      out.write("							.remove('is-show');\n");
      out.write("					document.querySelector('.modal.ID').classList\n");
      out.write("							.add('is-show');\n");
      out.write("				});\n");
      out.write("\n");
      out.write("document.querySelector('.modal.login .box a:nth-of-type(3)')\n");
      out.write("		.addEventListener(\n");
      out.write("				'click',\n");
      out.write("				function(event) {\n");
      out.write("					event.preventDefault();\n");
      out.write("					document.querySelector('.modal.login').classList\n");
      out.write("							.remove('is-show');\n");
      out.write("					document.querySelector('.modal.pw').classList\n");
      out.write("							.add('is-show');\n");
      out.write("				});\n");
      out.write("\n");
      out.write("document.querySelector('.modal.ID .bg').addEventListener(\n");
      out.write("		'click',\n");
      out.write("		function() {\n");
      out.write("			document.querySelector('.modal.ID').classList\n");
      out.write("					.remove('is-show');\n");
      out.write("		});\n");
      out.write("\n");
      out.write("document.querySelector('.modal.pw .bg').addEventListener(\n");
      out.write("		'click',\n");
      out.write("		function() {\n");
      out.write("			document.querySelector('.modal.pw').classList\n");
      out.write("					.remove('is-show');\n");
      out.write("		});\n");
      out.write("\n");
      out.write("function handleFormSubmit(event) {\n");
      out.write("    event.preventDefault(); \n");
      out.write("\n");
      out.write("    const form = document.forms['findid']; \n");
      out.write("\n");
      out.write("    fetch(form.action, {\n");
      out.write("        method: form.method,\n");
      out.write("        body: new URLSearchParams(new FormData(form))\n");
      out.write("    })\n");
      out.write("    .then(response => response.text())\n");
      out.write("    .then(result => {\n");
      out.write("        console.log(\"서버 응답:\", result);\n");
      out.write("\n");
      out.write("        if (result.trim() === \"1\") {\n");
      out.write("            alert(\"메일이 발송되었습니다.\");\n");
      out.write("        } else {\n");
      out.write("            alert(\"메일 전송 실패\");\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        window.location.href = \"/\";  \n");
      out.write("    })\n");
      out.write("    .catch(error => {\n");
      out.write("        console.error(\"서버 오류:\", error);\n");
      out.write("        alert(\"서버 오류 발생! 다시 시도해주세요.\");\n");
      out.write("        window.location.href = \"/\";\n");
      out.write("    });\n");
      out.write("\n");
      out.write("    return false;\n");
      out.write("}\n");
      out.write("\n");
      out.write("  \n");
      out.write("function handleFormSubmit2(event) {\n");
      out.write("    event.preventDefault(); \n");
      out.write("\n");
      out.write("    const form = document.forms['findpw']; \n");
      out.write("\n");
      out.write("    fetch(form.action, {\n");
      out.write("        method: form.method,\n");
      out.write("        body: new URLSearchParams(new FormData(form))\n");
      out.write("    })\n");
      out.write("    .then(response => response.text())\n");
      out.write("    .then(result => {\n");
      out.write("        console.log(\"서버 응답:\", result);\n");
      out.write("\n");
      out.write("        if (result.trim() === \"1\") {\n");
      out.write("            alert(\"임시비밀번호가 메일로 발송되었습니다.\");\n");
      out.write("        } else {\n");
      out.write("            alert(\"메일 전송 실패\");\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        window.location.href = \"/\";  \n");
      out.write("    })\n");
      out.write("    .catch(error => {\n");
      out.write("        console.error(\"서버 오류:\", error);\n");
      out.write("        alert(\"서버 오류 발생! 다시 시도해주세요.\");\n");
      out.write("        window.location.href = \"/\";\n");
      out.write("    });\n");
      out.write("\n");
      out.write("    return false;\n");
      out.write("}\n");
      out.write("\n");
      out.write("  \n");
      out.write("function updateCommentsUI(response) {\n");
      out.write("    console.log(\"받은 데이터:\", response);\n");
      out.write("    console.log(JSON.stringify(response, null, 2)); \n");
      out.write("\n");
      out.write("    // 댓글 배열은 response.comments에 있음\n");
      out.write("    const comments = response.comments;\n");
      out.write("\n");
      out.write("    let commentList = $(\".comment_ul\");\n");
      out.write("    // commentList가 실제로 존재하는지 확인 (콘솔에 길이 출력)\n");
      out.write("    console.log(\"댓글 리스트 요소 개수:\", commentList.length);\n");
      out.write("\n");
      out.write("    commentList.empty(); // 기존 댓글 삭제\n");
      out.write("\n");
      out.write("    for (let i = 0; i < comments.length; i++) {\n");
      out.write("        let comment = comments[i];\n");
      out.write("        let commentHtml = '<li class=\"comment_li\">' +\n");
      out.write("            '<div class=\"comment_li_box\">' +\n");
      out.write("        	    '<div class=\"user_profile\">' +\n");
      out.write("	        	    '<img class=\"user_profile\" src=\"' + comment.usaveprofile + '\" />' +\n");
      out.write("		        '</div>' +\n");
      out.write("                '<div class=\"comment_comment\">' +                	\n");
      out.write("                    '<div class=\"user_name\">' + comment.uidx + '</div>' +\n");
      out.write("                    '<div class=\"write_date\">' + comment.cinsertdate + '</div>' +\n");
      out.write("                    '<div class=\"user_content\">' + comment.ccomment + '</div>' +\n");
      out.write("                    \n");
      out.write("                '</div>' +\n");
      out.write("            '</div>' +\n");
      out.write("        '</li>';\n");
      out.write("        console.log(\"생성된 HTML:\", commentHtml);\n");
      out.write("        commentList.append(commentHtml);\n");
      out.write("    }\n");
      out.write("\n");
      out.write("}\n");
      out.write("\n");
      out.write("$(document).ready(function() {\n");
      out.write("    $('#commentForm').on('submit', function(event) {\n");
      out.write("        event.preventDefault();  // 폼 기본 제출 방지\n");
      out.write("\n");
      out.write("        var formData = $(this).serialize();\n");
      out.write("\n");
      out.write("        $.ajax({\n");
      out.write("            url: '/commentwrite',\n");
      out.write("            type: 'POST',\n");
      out.write("            data: formData,\n");
      out.write("            dataType: \"json\",\n");
      out.write("            success: function(response) {\n");
      out.write("                if (response.status === 'success') {\n");
      out.write("                    updateCommentsUI(response);\n");
      out.write("                    alert('댓글 작성 성공');\n");
      out.write("                } else {\n");
      out.write("                    alert('댓글 작성 실패: ' + response.message);\n");
      out.write("                }\n");
      out.write("            },\n");
      out.write("            error: function() {\n");
      out.write("                alert('로그인 후 작성해주세요.');\n");
      out.write("            }\n");
      out.write("        });\n");
      out.write("    });\n");
      out.write("});\n");
      out.write("\n");
      out.write("</script>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fset_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:set
    org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f0 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
    boolean _jspx_th_c_005fset_005f0_reused = false;
    try {
      _jspx_th_c_005fset_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fset_005f0.setParent(null);
      // /WEB-INF/views/review.jsp(161,13) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setVar("loginId");
      // /WEB-INF/views/review.jsp(161,13) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setValue((java.lang.Object) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope eq null ? '' : sessionScope.usaveprofile}", java.lang.Object.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      int _jspx_eval_c_005fset_005f0 = _jspx_th_c_005fset_005f0.doStartTag();
      if (_jspx_th_c_005fset_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f0);
      _jspx_th_c_005fset_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fset_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fset_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fset_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:set
    org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f1 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
    boolean _jspx_th_c_005fset_005f1_reused = false;
    try {
      _jspx_th_c_005fset_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fset_005f1.setParent(null);
      // /WEB-INF/views/review.jsp(162,13) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f1.setVar("loginOut");
      // /WEB-INF/views/review.jsp(162,13) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f1.setValue((java.lang.Object) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginId eq null ? '로그인' : '로그아웃'}", java.lang.Object.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      int _jspx_eval_c_005fset_005f1 = _jspx_th_c_005fset_005f1.doStartTag();
      if (_jspx_th_c_005fset_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f1);
      _jspx_th_c_005fset_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fset_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fset_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fout_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:out
    org.apache.taglibs.standard.tag.rt.core.OutTag _jspx_th_c_005fout_005f0 = (org.apache.taglibs.standard.tag.rt.core.OutTag) _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.OutTag.class);
    boolean _jspx_th_c_005fout_005f0_reused = false;
    try {
      _jspx_th_c_005fout_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fout_005f0.setParent(null);
      // /WEB-INF/views/review.jsp(163,13) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fout_005f0.setValue((java.lang.Object) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginOut}", java.lang.Object.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      int _jspx_eval_c_005fout_005f0 = _jspx_th_c_005fout_005f0.doStartTag();
      if (_jspx_th_c_005fout_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f0);
      _jspx_th_c_005fout_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fout_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fout_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f0_reused = false;
    try {
      _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f0.setParent(null);
      // /WEB-INF/views/review.jsp(167,9) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${not empty sessionScope && not empty sessionScope.usaveprofile}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
      if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\n");
          out.write("					        <!-- 세션이 존재하고 프로필 사진 경로가 있을 때만 표시 -->\n");
          out.write("					        <a href=\"userupdate\" type=\"button\">\n");
          out.write("					            <img\n");
          out.write("					                id=\"profileImage\"\n");
          out.write("					                src=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.usaveprofile}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\"\n");
          out.write("					                alt=\"프로필 사진\"\n");
          out.write("					                style=\"width: 50px; height: 50px; border-radius: 50%;\"\n");
          out.write("					            />\n");
          out.write("					        </a>\n");
          out.write("					    ");
          int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
      _jspx_th_c_005fif_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f1 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f1_reused = false;
    try {
      _jspx_th_c_005fif_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f1.setParent(null);
      // /WEB-INF/views/review.jsp(203,7) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f1.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${not empty sessionScope.usaveprofile}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f1 = _jspx_th_c_005fif_005f1.doStartTag();
      if (_jspx_eval_c_005fif_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("            \n");
          out.write("			    				<button id=\"blockButton\" onclick=\"openModal()\"><span class=\"material-symbols-outlined\">person_off</span></button>\n");
          out.write("							");
          int evalDoAfterBody = _jspx_th_c_005fif_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f1);
      _jspx_th_c_005fif_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fforEach_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f0_reused = false;
    try {
      _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f0.setParent(null);
      // /WEB-INF/views/review.jsp(266,19) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVar("comment");
      // /WEB-INF/views/review.jsp(266,19) name = items type = java.lang.Object reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setItems((java.lang.Object) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${comments}", java.lang.Object.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
        if (_jspx_eval_c_005fforEach_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\n");
            out.write("	                     <li class=\"comment_li\">\n");
            out.write("	                        <div class=\"comment_li_box\">\n");
            out.write("	                           <div class=\"user_profile\">\n");
            out.write("	                                   <img class=\"user_profile\"  src = \"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${comment.usaveprofile}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\" ></img>\n");
            out.write("	                               </div>\n");
            out.write("	                               <div class=\"comment_comment\">                                  \n");
            out.write("	                                  <div class=\"user_name\">");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${comment.uidx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</div> \n");
            out.write("	                                  <div class=\"write_date\">");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${comment.cinsertdate}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</div>\n");
            out.write("	                                  <div class=\"user_content\">");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${comment.ccomment}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</div>\n");
            out.write("	                               </div>\n");
            out.write("	                            </div>\n");
            out.write("	                         </li>\n");
            out.write("	                     ");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f0);
      _jspx_th_c_005fforEach_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f0_reused);
    }
    return false;
  }
}

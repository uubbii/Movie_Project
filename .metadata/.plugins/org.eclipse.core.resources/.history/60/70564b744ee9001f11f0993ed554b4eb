package com.kmove.app.email;

import org.springframework.mail.javamail.JavaMailSender;
import org.springframework.mail.SimpleMailMessage;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.time.LocalDateTime;
import java.util.concurrent.ConcurrentHashMap;
import java.util.Map;
import java.util.Random;

@Service
public class EmailService {
    
    private Map<String, String> codeStorage = new ConcurrentHashMap<String,String>();
    private Map<String, LocalDateTime> timestampStorage = new ConcurrentHashMap<String,LocalDateTime>();

    public String generateRandom() {
        Random random = new Random();
        int code = 100000 + random.nextInt(900000);
        return String.valueOf(code);
    }

    @Autowired
    private JavaMailSender mailSender;

    public void sendEmail(String to, String subject, String text) {
        SimpleMailMessage message = new SimpleMailMessage();        
        message.setTo(to);
        message.setSubject(subject);
        message.setText(text);
        mailSender.send(message);
        System.out.println("Email Send Success");
    }

    public void storeCode(String email, String code) {
        codeStorage.put(email, code);
        timestampStorage.put(email, LocalDateTime.now());
    }

    public boolean isCodeValid(String email, String inputCode) {
        String storedCode = codeStorage.get(email);
        LocalDateTime sentTime = timestampStorage.get(email);

        if (storedCode == null || sentTime == null) {
            return false; // 코드가 없음
        }
        if (!storedCode.equals(inputCode)) {
            return false; // 코드가 일치하지 않음
        }
        if (LocalDateTime.now().isAfter(sentTime.plusMinutes(5))) {
            return false; // 5분 초과
        }
        return true;
    }
}
